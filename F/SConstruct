#!/usr/bin/python

F_Object = Builder(action = 'F -o $TARGET -c $SOURCE', \
                    suffix = '.o', src_suffix = '.f90')

F_Program = Builder(action = 'F -o $TARGET $SOURCES')

F_Python = Builder(action = 'f2py --f77exec=f95 --f90exec=f95 -m $TARGET -c $SOURCES')

env = Environment()
env['BUILDERS']['Object'] = F_Object
env['BUILDERS']['Program'] = F_Program
env['BUILDERS']['F_Python'] = F_Python

# Common modules
const = env.Object('constants.f90')
p_veg = env.Object('params_veg.f90')
p_site = env.Object('params_site.f90')
vars = env.Object('variables.f90')
inputs = env.Object('inputs.f90')
funcs = env.Object('functions.f90')

common = const + p_veg + p_site + vars + inputs + funcs

# Calculation modules
phen = env.Object('phenology.f90')
irrad = env.Object('irradiance.f90')
evap = env.Object('evapotranspiration.f90')
envir = env.Object('environmental.f90')
r = env.Object('r.f90')
soil = env.Object('soil.f90')
flux = env.Object('o3_flux.f90')
effects = env.Object('o3_effects.f90')

all = common + phen + irrad + envir + r + evap + soil + flux + effects

# Test build
env.Program(target = 'TEST_new', source = all + ['Run.f90', 'Test.f90'])
env.Program(target = 'TEST_old', source = 'Baum_DOSE_test.f90')
test = env.Command('test', ['TEST_new', 'TEST_old'], """
        ./TEST_old > TEST_OUTPUT_old
        ./TEST_new > TEST_OUTPUT_new
        diff -u -s TEST_OUTPUT_old TEST_OUTPUT_new""")
ntest = env.Command('ntest', ['TEST_new', 'TEST_old'], """
        ./TEST_old > TEST_OUTPUT_old
        ./TEST_new > TEST_OUTPUT_new
        ndiff --relative-error 1.0e-6 TEST_OUTPUT_old TEST_OUTPUT_new""")

build_python = env.F_Python(target = 'dose_f', source = [ \
        'Constants_mod.f90', 'Params_Veg_mod.f90', 'Params_Site_mod.f90', \
        'Variables_mod.f90', 'Inputs_mod.f90', 'Functions_mod.f90', \
        'Phenology_mod.f90', 'Irradiance_mod.f90', 'Evapotranspiration_mod.f90', \
        'Environmental_mod.f90', 'R_mod.f90', 'Soil_mod.f90', 'O3_Flux_mod.f90', \
        'O3_Effects_mod.f90', 'Run.f90'])
Default(test)
